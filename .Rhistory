coord_equal()+
scale_fill_viridis_c() +
facet_wrap(~month)
nasa %>%
as_tibble() %>%
group_by(lat,long, month) %>%
summarize(u=mean(temperature,na.rm=T)) %>%
ggplot(data=., aes(long,lat))+
geom_raster(aes(fill=u))+
coord_equal()+
scale_fill_viridis_c() +
facet_wrap(~month)
nasa %>%
as_tibble() %>%
group_by(lat,long, month) %>%
summarize(u=mean(temperature,na.rm=T)) %>%
ungroup() %>%
mutate(tempC = u - 273.15) %>%
ggplot(data=., aes(long,lat))+
geom_raster(aes(fill=tempC))+
coord_equal()+
scale_fill_viridis_c() +
facet_wrap(~month)
nasa %>%
as_tibble() %>%
group_by(lat,long, year,month) %>%
# summarize(u=mean(temperature,na.rm=T)) %>%
# ungroup() %>%
mutate(tempC = temperature - 273.15) %>%
mutate(hemi = cut(lat,breaks = c(-Inf,0,Inf),labels = c("SH","NH"))) %>%
group_by(hemi,year,month) %>%
summarize(u=mean(tempC,na.rm=T)) %>%
ungroup() %>%
mutate(date=parse_date_time(paste(year,month,1),'ymd')) %>%
ggplot(data=., aes(date,u,color=hemi))+
geom_line()+
scale_fill_viridis_c()
data()
UKDriverDeaths
seals
# Seals -------------------------------------------------------------------
data("seals")
seals %>% glimpse
geom_segment()
?geom_segment()
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
borders("state")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_cartesian()
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_cartesian()+
borders("state")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("state")
borders("state")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("world")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("world")
?borders
map('usa')
map(database = 'usa')
map(database = 'usa', regions = "west")
map(database = 'usa', regions = "state:west")
map(database = 'usa', regions = "california:west")
?map
map(database = 'usa', regions = "california:north")
map(database = 'usa', regions = "california")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("california")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("California")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("USA")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")
ggplot(seals, aes(long, lat)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))
seals
seals %>% select(lat,long) %>% dist
seal %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2))
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2))
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2)) %>%
ggplot(., aes(long, lat, color=distance)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2)) %>%
ggplot(., aes(long, lat, color=distance)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))+
theme_grey()
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2)) %>%
ggplot(., aes(long, lat, color=distance)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))+
theme_dark()
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2)) %>%
ggplot(., aes(long, lat, color=distance)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm"))) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))+
scale_color_viridis_c()+
theme_dark()
seals %>%
mutate(distance=sqrt(delta_long**2 + delta_lat**2)) %>%
ggplot(., aes(long, lat, color=distance)) +
geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),
arrow = arrow(length = unit(0.1,"cm")),lwd=2) +
coord_equal()+
borders("usa")+
scale_x_continuous(limits = c(-150,-120))+
scale_color_viridis_c()+
theme_dark()
storms
# storms ------------------------------------------------------------------
names(storms)
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("usa")
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(0,55))
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(0,55))+
borders('world')
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(-10,55))+
borders('world')
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(-10,55))+
borders('world', fill = "black")
storms %>%
ggplot(data=., aes(long,lat,size=category))+geom_point()+
borders("world")+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(-10,55))+
borders('world', fill = "brown")
# bad!
storms %>%
ggplot(data=., aes(long,lat,size=category))+
borders("world")+
geom_point()+
scale_x_continuous(limits=c(-120,0))+
scale_y_continuous(limits = c(-10,55))
storms
# bad!
storms %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("world")+
geom_point()+
# scale_x_continuous(limits=c(-120,0))+
# scale_y_continuous(limits = c(-10,55))
# SPATIAL METHODS + TIDYVERSE ---------------------------------------------
install.packages("rgdal","")
# bad!
storms %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("world")+
geom_point()+
scale_color_viridis_c()
# bad!
storms %>%
arrange(wind) %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("world")+
geom_point()+
scale_color_viridis_c()
# bad!
storms %>%
arrange(wind) %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("florida")+
geom_point()+
scale_color_viridis_c()+
scale_x_continuous(limits=c(-130,0))+
scale_y_continuous(limits = c(-10,55))
# bad!
storms %>%
arrange(wind) %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("state")+
geom_point()+
scale_color_viridis_c()+
scale_x_continuous(limits=c(-130,0))+
scale_y_continuous(limits = c(-10,55))
# bad!
storms %>%
arrange(wind) %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("mexico")+
geom_point()+
scale_color_viridis_c()+
scale_x_continuous(limits=c(-130,0))+
scale_y_continuous(limits = c(-10,55))
# bad!
storms %>%
arrange(wind) %>%
ggplot(data=., aes(long,lat,size=category,color=wind))+
borders("coast")+
geom_point()+
scale_color_viridis_c()+
scale_x_continuous(limits=c(-130,0))+
scale_y_continuous(limits = c(-10,55))
?borders
# Sunspot time series example ---------------------------------------------
sunspots
sunspots %>% class
library(tidyverse);
library(lubridate);
sunspots %>% class
sunspots
sunspots %>% plot
sunspots %>% as_tibble()
sunspots %>% as.matrix()
sunspots %>% as.matrix() %>% dim
# Sunspot time series example ---------------------------------------------
sunspot.month
# Sunspot time series example ---------------------------------------------
sunspot.month %>% class
# Sunspot time series example ---------------------------------------------
sunspot.month %>% plot
data()
lakers
population
# Reshaping data example --------------------------------------------------
population %>%
filter(country=="Colombia")
# Reshaping data example --------------------------------------------------
population %>%
filter(country=="Colombia") %>%
ggplot(data=., aes(year, population))+geom_line()
# Reshaping data example --------------------------------------------------
population %>%
filter(country=="China") %>%
ggplot(data=., aes(year, population))+geom_line()
# Reshaping data example --------------------------------------------------
population %>%
filter(country=="Italy") %>%
ggplot(data=., aes(year, population))+geom_line()
# Reshaping data example --------------------------------------------------
population %>%
filter(country=="Italy") %>%
ggplot(data=., aes(year, population))+geom_line()+geom_point()
borders()
who
txhousing
CO2
Orange
Orange %>% class
LakeHuron
LakeHuron %>% plot
UKDriverDeaths
UKDriverDeaths %>% class
UKDriverDeaths %>% plot
read_csv("http://www-eio.upc.edu/~pau/cms/rdata/csv/cluster/plantTraits.csv")
dim9dat
dim(dat)
# PCA example -------------------------------------------------------------
dat <- read_csv("http://www-eio.upc.edu/~pau/cms/rdata/csv/cluster/plantTraits.csv")
dat
dat$X1
dat %>%
rename(sp=X1)
?prcomp
dat %>%
rename(sp=X1) %>%
select(-sp) %>%
prcomp()
dat %>% dim
?princomp
dat %>%
rename(sp=X1) %>%
select(-sp) %>%
prcomp(~., data=.)
dat %>%
rename(sp=X1) %>%
select(-sp) %>%
prcomp(~., data=.) %>% biplot()
?mutate_each
?mutate_each_
iris %>%
group_by(Species) %>%
summarize_all(mean)
iris
iris %>%
group_by(Species) %>%
mutate_all(scale)
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(Species~., data=.)
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(~.-Species, data=.)
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(~., data=.)
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(~.-Species, data=.)
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(~.-Species, data=.) %>%
biplot()
iris %>%
group_by(Species) %>%
# mutate_all(scale) %>%
prcomp(~.-Species, data=.) %>%
biplot()
dat %>%
rename(sp=X1) %>%
prcomp(~., data=.) %>%  # bad! we need to scale and center
biplot()
dat %>%
rename(sp=X1) %>%
prcomp(~. -sp, data=.) %>%  # bad! we need to scale and center
biplot()
warnings()
scale
dat %>%
rename(sp=X1) %>%
mutate_each(scale, -sp)
dat %>%
rename(sp=X1) %>%
mutate_all(scale, -sp)
?mutate_all
dat %>%
rename(sp=X1) %>%
mutate_all(scale, -"sp") %>%
prcomp(~., data=.) %>%  # bad! we need to scale and center
biplot()
dat %>%
rename(sp=X1) %>%
mutate_all(scale, cols=-"sp")
dat %>%
rename(sp=X1) %>%
mutate_all(scale) %>%
prcomp(~., data=.) %>%  # bad! we need to scale and center
biplot()
dat %>%
rename(sp=X1) %>%
group_by(sp) %>%
mutate_all(scale) %>%
prcomp(~., data=.) %>%  # bad! we need to scale and center
biplot()
dat %>%
rename(sp=X1) %>%
group_by(sp) %>%
mutate_all(scale)
dat %>%
rename(sp=X1) %>%
group_by(sp) %>%
mutate_all(scale) %>%
prcomp(~., data=.) %>%  # bad! we need to scale and center
biplot()
dat %>%
rename(sp=X1) %>%
group_by(sp) %>%
mutate_all(scale) %>%
prcomp(~. -sp, data=.) %>%  # bad! we need to scale and center
biplot()
filter_all()
?filter_all
dat %>%
rename(sp=X1) %>%
group_by(sp) %>%
mutate_all(scale)
# PCA example -------------------------------------------------------------
iris %>%
prcomp(~.-Species, data=.) %>%
biplot()
iris %>%
group_by(Species) %>%
mutate_all(scale) %>%
prcomp(~.-Species, data=.) %>%
biplot()
# non pipe way
rnorm(1000, mean = 0, sd=3)
# non pipe way
log(rnorm(1000, mean = 0, sd=3))
# non pipe way
log(rnorm(1000, mean = 100, sd=3))
# non pipe way
hist(log(rnorm(1000, mean = 100, sd=3)))
# pipe way
rnorm(1000, mean=100, sd=3)
# pipe way
rnorm(1000, mean=100, sd=3) %>% log() %>% hist()
USAccDeaths
USAccDeaths %>% class
UScitiesD
USArrests
USArrests %>% class
USArrests %>% head
USArrests %>% name
USArrests %>% names
# Joining data frames by an identifier ------------------------------------
USArrests %>% class
# Joining data frames by an identifier ------------------------------------
USArrests
rownames(USArrests)
USArrests %>%
mutate(state=rownames(USArrests))
dat1 <- USArrests %>%
mutate(state=rownames(USArrests))
USPersonalExpenditure
usaMapEnv
USAccDeaths
USJudgeRatings
state.area
uspop
band_members
storms
storms %>% names
data(package = .packages(all.available = TRUE))
crime
ggmap::crime
ggmap::crime %>% class
ggmap::zips
ggmap::zips %>% head
drivers
MASS::drivers
MASS::drivers %>% class
MASS::Cars93
MASS::Cars93 %>% names
MASS::farms
MASS::road
dat2 <- MASS::road
dat2
rownames(dat2)
MASS::road %>%
mutate(sate=rownames(dat2))
dat2 <- MASS::road %>%
mutate(sate=rownames(dat2))
dat2 <- MASS::road
dat2 <- MASS::road %>%
mutate(state=rownames(dat2))
pmatch(dat2$state, dat1$state, nomatch = NA_integer_, duplicates.ok = FALSE)
dat2[pmatch(dat2$state, dat1$state, nomatch = NA_integer_, duplicates.ok = FALSE),]
dat2[pmatch(dat2$state, dat1$state, duplicates.ok = FALSE),]
pmatch(dat2$state, dat1$state, duplicates.ok = FALSE)
pmatch()
?patch
?pmatch
